parameters:
  - name: terraform_work_dir
  - name : app_name
  - name: out_file
  - name: input_vars

jobs:
  - job: 'Terraform'
    pool:
      vmImage: ubuntu-latest

    steps:
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: 0.14.7

      - task: TerraformCLI@0
        displayName: 'Terraform init'
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.terraform_work_dir }}'
          allowTelemetryCollection: true
    
      - task: CmdLine@2 
        displayName: "Terraform check format"
        inputs:
          script: 'terraform fmt -check -recursive -diff $(System.DefaultWorkingDirectory)/${{ parameters.terraform_work_dir }}'

      - task: TerraformCLI@0
        displayName: 'Terraform plan'
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.terraform_work_dir }}'
          allowTelemetryCollection: true
          commandOptions: -out=${{ parameters.out_file }}.plan -input=false ${{ parameters.input_vars }}
          environmentServiceName: 'AzureDevOps'

      - task: TerraformCLI@0
        displayName: 'Terraform Apply'
        inputs:
          command: 'apply'
          allowTelemetryCollection: true
          workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.terraform_work_dir }}'
          commandOptions: -auto-approve -lock-timeout=10m ${{ parameters.out_file }}.plan"
          environmentServiceName: 'AzureDevOps'

      - task: CmdLine@2 
        displayName: "Create output json file"
        inputs:
          script: 'terraform output -json > ./output.json'