#https://docs.microsoft.com/pt-br/azure/devops/pipelines/tasks/utility/publish-pipeline-artifact?view=azure-devops
#https://faun.pub/azure-devops-build-release-with-yaml-templates-d55f25a4928c
#https://thomasthornton.cloud/2020/11/02/deploying-terraform-using-azure-devops-with-build-artifacts/

parameters:
  - name : app_name
  - name: out_file
  - name: input_vars
  - name: include_root_rolder
  - name: work_dir
  - name : archive_type
  - name: output_file
  - name: artifact_name

jobs:
  - job: 'Terraform'
    pool:
      vmImage: ubuntu-latest

    steps:
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: 0.14.7

      - task: TerraformCLI@0
        displayName: 'Terraform init'
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.work_dir }}'
          allowTelemetryCollection: true
    
      - task: CmdLine@2 
        displayName: "Terraform check format"
        inputs:
          script: 'terraform fmt -check -recursive -diff $(System.DefaultWorkingDirectory)/${{ parameters.work_dir }}'

      - task: TerraformCLI@0
        displayName: 'Terraform plan'
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.work_dir }}'
          allowTelemetryCollection: true
          commandOptions: -out=${{ parameters.out_file }}.plan -input=false ${{ parameters.input_vars }}
          environmentServiceName: 'AzureDevOps'

      # - task: TerraformCLI@0
      #   displayName: 'Terraform Apply'
      #   inputs:
      #     command: 'apply'
      #     allowTelemetryCollection: true
      #     workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.work_dir }}'
      #     commandOptions: -auto-approve -lock-timeout=10m ${{ parameters.out_file }}.plan"
      #     environmentServiceName: 'AzureDevOps'

      - task: ArchiveFiles@2
        inputs:
          includeRootFolder: ${{ parameters.include_root_rolder }}
          rootFolderOrFile: ${{ parameters.work_dir }}
          archiveType: ${{ parameters.archive_type }}
          archiveFile: '$(Build.ArtifactStagingDirectory)/${{ parameters.output_file }}.${{ parameters.archive_type }}'

      # - task: CmdLine@2 
      #   displayName: "Create output json file"
      #   inputs:
      #     script: 'terraform output -json > ${{ parameters.output_file }}.json'
      #     workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.work_dir }}

      # - task: CopyFiles@2
      #   inputs:
      #     SourceFolder: '$(System.DefaultWorkingDirectory)/${{ parameters.work_dir }}'
      #     Contents: '${{ parameters.output_file }}.json'
      #     TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: ${{ parameters.artifact_name }}